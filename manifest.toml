#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "fluffychat"
name = "Fluffychat"
description.en = "A cute [matrix] client written in Flutter. "
description.fr = "Un client [matrix] mignon Ã©crit en Flutter."

version = "1.17.1~ynh1"

maintainers = ["OniriCorpe"]

[upstream]
license = "AGPL-3.0-only"
website = "https://fluffychat.im/"
demo = "https://fluffychat.im/web"
userdoc = "https://github.com/krille-chan/fluffychat/wiki#-user-guides"
code = "https://github.com/krille-chan/fluffychat"
fund = "https://ko-fi.com/krille"

[integration]
yunohost = ">= 11.1.21"
architectures = "all"
multi_instance = true
ldap = false
sso = false
disk = "70M"
ram.build = "50M"
ram.runtime = "50M"

[install]
[install.domain]
# this is a generic question - ask strings are automatically handled by YunoHost's core
type = "domain"

[install.path]
# this is a generic question - ask strings are automatically handled by YunoHost's core
type = "path"
default = "/example"

[install.init_main_permission]
# this is a generic question - ask strings are automatically handled by YunoHost's core
# This won't be saved as setting and will instead be used to initialize the SSOwat permission
type = "group"
default = "visitors"

[resources]
# See the packaging documentation for the full set
# of explanation regarding the behavior and properties for each of those
[resources.sources]
[resources.sources.main]
# This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
#    ynh_setup_source --dest_dir="$install_dir"
# You can also define other assets than "main" and add --source_id="foobar" in the previous command
url = "https://github.com/krille-chan/fluffychat/releases/download/v1.17.1/fluffychat-web.tar.gz"
sha256 = "6800fde0284aceeca263c86d5a3871fe44e513dbe90ab8c00fc58a8ea74ff5ad"
in_subdir = 2

autoupdate.asset = "fluffychat-web.tar.gz"
autoupdate.strategy = "latest_github_release"

[resources.install_dir]
# This will create/remove the install dir as /var/www/$app
# and store the corresponding setting $install_dir
owner = "www-data:rx"
group = "www-data:rx"

[resources.permissions]
# This will configure SSOwat permission for $domain/$path/
# The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
main.url = "/"
